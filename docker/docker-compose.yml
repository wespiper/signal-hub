version: '3.8'

services:
  # Signal Hub MCP Server
  signal-hub:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    ports:
      - "${SIGNAL_HUB_PORT:-3333}:3333"
    environment:
      - SIGNAL_HUB_ENV=development
      - SIGNAL_HUB_DEBUG=true
      - SIGNAL_HUB_EARLY_ACCESS=${SIGNAL_HUB_EARLY_ACCESS:-false}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - CHROMADB_HOST=chromadb
      - CHROMADB_PORT=8000
      - REDIS_URL=redis://redis:6379
    volumes:
      - ../src:/app/src
      - ../config:/app/config
      - ../data:/app/data
    depends_on:
      chromadb:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3333/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # ChromaDB Vector Database
  chromadb:
    image: chromadb/chroma:latest
    ports:
      - "${CHROMADB_PORT:-8000}:8000"
    environment:
      - CHROMA_SERVER_AUTH_PROVIDER=chromadb.auth.token.TokenAuthServerProvider
      - CHROMA_SERVER_AUTH_CREDENTIALS=${CHROMA_AUTH_TOKEN:-test-token}
      - ANONYMIZED_TELEMETRY=false
    volumes:
      - chromadb-data:/chroma/chroma
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis for caching
  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT:-6379}:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Development database (PostgreSQL for future pgvector)
  postgres:
    image: postgres:15-alpine
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-signalhub}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-signalhub}
      - POSTGRES_DB=${POSTGRES_DB:-signalhub}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-signalhub}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Monitoring - Prometheus
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    restart: unless-stopped
    profiles:
      - monitoring

  # Monitoring - Grafana
  grafana:
    image: grafana/grafana:latest
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    restart: unless-stopped
    profiles:
      - monitoring

volumes:
  chromadb-data:
  redis-data:
  postgres-data:
  prometheus-data:
  grafana-data:

networks:
  default:
    name: signal-hub-network